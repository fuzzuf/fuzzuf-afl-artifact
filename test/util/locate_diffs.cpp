#define BOOST_TEST_MODULE util.locate_diffs
#define BOOST_TEST_DYN_LINK
#include <array>
#include <vector>
#include <iostream>
#include <boost/test/unit_test.hpp>
#include <Utils/Common.hpp>
BOOST_AUTO_TEST_CASE(UtilLocateDiffs1) {
  constexpr std::array< std::uint8_t, 16u > a{
    0x9f, 0xad, 0xf0, 0xbe, 0x42, 0xec, 0x0, 0xf8,
    0xce, 0x87, 0x00, 0xbb, 0xcc, 0xd9, 0x2e, 0x00
  };
  constexpr std::array< std::uint8_t, 16u > b{
    0x9f, 0xad, 0xf0, 0xbf, 0x42, 0xec, 0x0, 0xf8,
    0xce, 0x87, 0x00, 0xbb, 0xc0, 0xd9, 0x2e, 0x00
  };
  const auto [first,last] = Util::LocateDiffs( a.data(), b.data(), a.size() );
  BOOST_CHECK_EQUAL( first, 3 );
  BOOST_CHECK_EQUAL( last, 12 );
}

BOOST_AUTO_TEST_CASE(UtilLocateDiffs2) {
  constexpr std::array< std::uint8_t, 16u > a{
    0x90, 0xad, 0xf0, 0xbe, 0x42, 0xec, 0x0, 0xf8,
    0xce, 0x87, 0x00, 0xbb, 0xcc, 0xd9, 0x2e, 0x03
  };
  constexpr std::array< std::uint8_t, 16u > b{
    0x9f, 0xad, 0xf0, 0xbe, 0x42, 0xec, 0x0, 0xf8,
    0xce, 0x87, 0x00, 0xbb, 0xcc, 0xd9, 0x2e, 0x00
  };
  const auto [first,last] = Util::LocateDiffs( a.data(), b.data(), a.size() );
  BOOST_CHECK_EQUAL( first, 0 );
  BOOST_CHECK_EQUAL( last, 15 );
}

BOOST_AUTO_TEST_CASE(UtilLocateDiffs3) {
  constexpr std::array< std::uint8_t, 16u > a{
    0x9f, 0xad, 0xf0, 0xbe, 0x42, 0xec, 0x0, 0xf8,
    0xce, 0x87, 0x00, 0xbb, 0xcc, 0xd9, 0x2e, 0x00
  };
  constexpr std::array< std::uint8_t, 16u > b{
    0x9f, 0xad, 0xf0, 0xbe, 0x42, 0xec, 0x0, 0xf8,
    0xce, 0x87, 0x00, 0xbb, 0xcc, 0xd9, 0x2e, 0x00
  };
  const auto [first,last] = Util::LocateDiffs( a.data(), b.data(), a.size() );
  BOOST_CHECK_EQUAL( first, -1 );
  BOOST_CHECK_EQUAL( last, -1 );
}
